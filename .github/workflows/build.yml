name: SonarCloud Analysis

on:
    push:
        branches:
            - main
    pull_request:
        types: [opened, synchronize, reopened]

jobs:
    build:
        name: Build and analyze
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v4
              with:
                  fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis

            # Set up Node.js for React frontend
            - name: Set up Node.js for React frontend
              uses: actions/setup-node@v2
              with:
                  node-version: "16" # Adjust based on your project requirements

            # Set up JDK 17 for Java services
            - name: Set up JDK 17
              uses: actions/setup-java@v4
              with:
                  java-version: 17
                  distribution: "zulu" # Alternative distribution options are available.

            # Cache SonarQube packages
            - name: Cache SonarQube packages
              uses: actions/cache@v4
              with:
                  path: ~/.sonar/cache
                  key: ${{ runner.os }}-sonar
                  restore-keys: ${{ runner.os }}-sonar

            # Cache Maven packages for Java Spring Boot
            - name: Cache Maven packages
              uses: actions/cache@v4
              with:
                  path: ~/.m2
                  key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
                  restore-keys: ${{ runner.os }}-m2

            # Install dependencies and run SonarCloud analysis for React frontend
            - name: Install dependencies and analyze React frontend
              run: |
                  cd frontend  # Assuming your React frontend is in the 'frontend' folder
                  npm install
                  npm run sonar # Make sure you have a 'sonar' script in your 'package.json' for SonarCloud analysis

            # Build and analyze Java Spring Boot services
            - name: Build and analyze Java services
              run: |
                  mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
                    -Dsonar.projectKey=mingli9_SuaraCloud \
                    -Dsonar.sources=$(find . -type d -name "src" -exec echo {} \;)  # Dynamically finds the 'src' folder in all Java services
              env:
                  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
